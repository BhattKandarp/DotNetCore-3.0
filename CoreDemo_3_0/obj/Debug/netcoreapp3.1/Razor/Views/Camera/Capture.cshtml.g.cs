#pragma checksum "D:\AspNetCore\CoreDemo_3_0\CoreDemo_3_0\Views\Camera\Capture.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "26c5e09ea01485f6d8caa8d1266772388b57c980"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Camera_Capture), @"mvc.1.0.view", @"/Views/Camera/Capture.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\AspNetCore\CoreDemo_3_0\CoreDemo_3_0\Views\_ViewImports.cshtml"
using CoreDemo_3_0;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\AspNetCore\CoreDemo_3_0\CoreDemo_3_0\Views\_ViewImports.cshtml"
using CoreDemo_3_0.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"26c5e09ea01485f6d8caa8d1266772388b57c980", @"/Views/Camera/Capture.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"b826296d5e66143aa8b9930040ce78e55a77b578", @"/Views/_ViewImports.cshtml")]
    public class Views_Camera_Capture : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/webcamjs/webcam.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("container"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
#nullable restore
#line 2 "D:\AspNetCore\CoreDemo_3_0\CoreDemo_3_0\Views\Camera\Capture.cshtml"
  
    ViewData["Title"] = "Capture";
   

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n<!DOCTYPE html>\r\n<html lang=\"en\">\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("head", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "26c5e09ea01485f6d8caa8d1266772388b57c9804607", async() => {
                WriteLiteral("\r\n    <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\r\n    <title>WebcamJS Test Page</title>\r\n");
                WriteLiteral(@"
    <style type=""text/css"">

        body {
            font-family: Helvetica, sans-serif;
        }

        h2, h3 {
            margin-top: 0;
        }

        form {
            margin-top: 15px;
        }

            form > input {
                margin-right: 15px;
            }


        #buttonhide {
            background: transparent;
            border: none !important;
            font-size: 0;
        }
    </style>

    <style type=""text/css"">
        /* Flipping the video as it was not mirror view */
        video {
            -webkit-transform: scaleX(-1);
            transform: scaleX(-1);
            margin-top: 5px;
        }

        /* Flipping the canvas image as it was not mirror view */
        #canvas {
            -moz-transform: scaleX(-1);
            -o-transform: scaleX(-1);
            -webkit-transform: scaleX(-1);
            transform: scaleX(-1);
            filter: FlipH;
            -ms-filter: ""FlipH"";
        }
    </sty");
                WriteLiteral("le>\r\n\r\n");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("body", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "26c5e09ea01485f6d8caa8d1266772388b57c9806805", async() => {
                WriteLiteral(@"
    <br />
    <div class=""col-md-2""></div>
    <div class=""col-md-4"">
        <div class=""panel panel-default"">
            <div class=""panel-heading"">Camera</div>
            <div class=""panel-body"">
                <button class=""btn btn-primary"" onclick=""stop();gum('user')"">Front</button>

                <button class=""btn btn-primary"" onclick=""stop();gum('environment')"">Back</button>
");
                WriteLiteral("                <div id=\"div\"></div>\r\n                <br />\r\n                <video id=\"video\" height=\"320\" autoplay></video>\r\n                <!-- A button for taking snaps -->\r\n                ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "26c5e09ea01485f6d8caa8d1266772388b57c9807727", async() => {
                    WriteLiteral("\r\n                    <input type=\"button\" class=\"btn btn-success\" value=\"Take Snapshot\" id=\"btnCapture\">\r\n                ");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"

            </div>
        </div>
    </div>
    <div class=""col-md-6"">
        <div class=""panel panel-default"">
            <div class=""panel-heading"">Captured Photo</div>
            <div class=""panel-body"">
                <div id=""results"">
                    Your captured image will appear here...
                    <canvas style=""border:solid 1px #ddd;background-color:white;"" id=""canvas"" width=""475"" height=""350""></canvas>
                </div>
            </div>
            <br />
            <br />
        </div>
    </div>

    <div class=""col-md-2"">    </div>
    <!-- First, include the Webcam.js JavaScript Library -->
    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "26c5e09ea01485f6d8caa8d1266772388b57c9809837", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n    <!-- Configure a few settings and attach camera -->\r\n");
                WriteLiteral(@"
    <!-- Code to handle taking the snapshot and displaying it locally -->
    <script language=""JavaScript"">
        function take_snapshot() {
            debugger;
            // take snapshot and get image data
            Webcam.snap(function (data_uri) {
                // display results in page
                document.getElementById('results').innerHTML =
                    '<img src=""' +
                    data_uri +
                    '""/>';

                Webcam.upload(data_uri,
                    '/Camera/Capture',
                    function (code, text) {

                        alert('Photo Captured');
                    });
            });
        }
    </script>
    <script type=""text/javascript"">
        debugger;
        var gum = mode =>
            navigator.mediaDevices.getUserMedia({ video: { facingMode: { exact: mode } } })
                .then(stream => (video.srcObject = stream))
                .catch(e => log(e));

        var stop = () => vi");
                WriteLiteral(@"deo.srcObject && video.srcObject.getTracks().forEach(t => t.stop());

        var log = msg => div.innerHTML += msg + ""<br>"";
    </script>
    <script type=""text/javascript"">
        var video = document.querySelector(""#video"");

        // Basic settings for the video to get from Webcam
        const constraints = {
            audio: false,
            video: {
                width: 475, height: 475
            }
        };

        // This condition will ask permission to user for Webcam access
        if (navigator.mediaDevices.getUserMedia) {
            navigator.mediaDevices.getUserMedia(constraints)
                .then(function (stream) {
                    video.srcObject = stream;
                })
                .catch(function (err0r) {
                    console.log(""Something went wrong!"");
                });
        }

        function stop(e) {
            var stream = video.srcObject;
            var tracks = stream.getTracks();

            for (var i =");
                WriteLiteral(@" 0; i < tracks.length; i++) {
                var track = tracks[i];
                track.stop();
            }
            video.srcObject = null;
        }
    </script>

    <script type=""text/javascript"">
        // Below code to capture image from Video tag (Webcam streaming)
        $(""#btnCapture"").click(function () {
            debugger;
            var canvas = document.getElementById('canvas');
            var context = canvas.getContext('2d');

            // Capture the image into canvas from Webcam streaming Video element
            context.drawImage(video, 0, 0);
        });

        // Upload image to server - ajax call - with the help of base64 data as a parameter
        $(""#btnSave"").click(function () {
             debugger;
            // Below new canvas to generate flip/mirron image from existing canvas
            var destinationCanvas = document.createElement(""canvas"");
            var destCtx = destinationCanvas.getContext('2d');


            destination");
                WriteLiteral(@"Canvas.height = 500;
            destinationCanvas.width = 500;

            destCtx.translate(video.videoWidth, 0);
            destCtx.scale(-1, 1);
            destCtx.drawImage(document.getElementById(""canvas""), 0, 0);

            // Get base64 data to send to server for upload
            var imagebase64data = destinationCanvas.toDataURL(""image/png"");
            imagebase64data = imagebase64data.replace('data:image/png;base64,', '');
            //$.ajax({
            //    type: 'POST',
            //    url: '/Home/UploadWebCamImage',
            //    data: '{ ""imageData"" : ""' + imagebase64data + '"" }',
            //    contentType: 'application/json; charset=utf-8',
            //    dataType: 'text',
            //    success: function (out) {
            //        alert('Image uploaded successfully..');
            //    }
            //});
        });
    </script>
");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n</html>\r\n\r\n");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
